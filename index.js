const express = require('express');
const app = express();
const PORT = process.env.PORT || 3000; // ะะปั Render/Glitch ะธัะฟะพะปัะทัะตะผ PORT ะธะท ะพะบััะถะตะฝะธั

app.use(express.json()); // ะะปั ะฟะฐััะธะฝะณะฐ JSON ะฒ ัะตะปะต ะทะฐะฟัะพัะฐ

// ะะฐััะธะฒ ั ัะพะฟะพััะฐะฒะปะตะฝะธะตะผ ัะพะฒะฐัะพะฒ ะธ ะธั ะฒะฐัะธะฐะฝัะพะฒ
const arrProduct = [
  {
    ะััะฝะฐ: {
      ะดะธะผ: 'ceab1dbf-3ff2-42f5-9bc6-49d64cd3d418',
      ัะธะฝัะน: '1e8dbea6-5ccb-40dc-bb8b-8e41aeb67d7f',
      ะผะพะปะพะบะพ: '02873f89-cf77-4e18-8188-e8735839b5aa',
    },
  },
];

// ะะพะณะธััะตะผ ะฒัะต ะฒัะพะดััะธะต ะทะฐะฟัะพัั ะดะปั ะพัะปะฐะดะบะธ
app.use((req, res, next) => {
  console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
  next();
});

// ะะฑัะฐะฑะพััะธะบ ะดะปั ะบะพัะฝะตะฒะพะณะพ ะผะฐัััััะฐ
app.get('/', (req, res) => {
  res.send('ะกะตัะฒะตั ัะฐะฑะพัะฐะตั. ะัะฟะพะปัะทัะนัะต POST /log ะดะปั Webhook.');
});

app.post('/log', async (req, res) => {
  const tildaData = req.body;

  // ะัะฒะพะดะธะผ ะฟะพะปััะตะฝะฝัะต ะดะฐะฝะฝัะต ะดะปั ะพัะปะฐะดะบะธ
  console.log('ะะพะปััะตะฝะพ ั ัะฐะนัะฐ:', JSON.stringify(tildaData, null, 2));

  // ะัะพะฒะตััะตะผ ะฝะฐะปะธัะธะต payment ะธ products
  if (!tildaData.payment) {
    console.error('ะัะธะฑะบะฐ: ะฟะพะปะต payment ะพััััััะฒัะตั ะฒ ะดะฐะฝะฝัั ะพั ะขะธะปัะดั');
    res.status(400).send('error');
    return;
  }

  if (!tildaData.payment.products || !Array.isArray(tildaData.payment.products)) {
    console.error('ะัะธะฑะบะฐ: payment.products ะพััััััะฒัะตั ะธะปะธ ะฝะต ัะฒะปัะตััั ะผะฐััะธะฒะพะผ');
    res.status(400).send('error');
    return;
  }

  // ะคะพัะผะธััะตะผ ะผะฐััะธะฒ ัะพะฒะฐัะพะฒ ะดะปั CRM
  const cart = [];
  tildaData.payment.products.forEach((product) => {
    const productName = product.name; // ะะฐะฟัะธะผะตั, "ะััะฝะฐ"
    const color = product.options && product.options[0]?.variant; // ะะฐะฟัะธะผะตั, "ะดะธะผ"
    const quantity = product.quantity || 0; // ะะพะปะธัะตััะฒะพ
    const amount = product.amount || 0; // ะะฑัะฐั ััะผะผะฐ ะทะฐ ััะพั ัะธะฟ ัะพะฒะฐัะฐ

    // ะะฐัะพะดะธะผ product_id ะฒ arrProduct
    const productMapping = arrProduct.find((item) => item[productName]);
    const productId = productMapping && color && productMapping[productName][color];

    if (productId) {
      cart.push({
        product_id: productId,
        store_id: '',
        price: amount, // ะะฑัะฐั ััะผะผะฐ ะทะฐ ะฒัะต ะตะดะธะฝะธัั ััะพะณะพ ัะพะฒะฐัะฐ
        quantity: quantity, // ะะฑัะตะต ะบะพะปะธัะตััะฒะพ
        product_bonus_sum: 0,
      });
    } else {
      console.warn(`ะะต ะฝะฐะนะดะตะฝ product_id ะดะปั ${productName} ั ัะฒะตัะพะผ ${color || 'ะฝะต ัะบะฐะทะฐะฝ'}`);
    }
  });

  // ะคะพัะผะธััะตะผ ะธัะพะณะพะฒัะน ะพะฑัะตะบั ะดะปั CRM
  const crmData = {
    number: tildaData.payment.orderid ? parseInt(tildaData.payment.orderid) : 100, // ะัะฟะพะปัะทัะตะผ orderid ะธะปะธ 100 ะฟะพ ัะผะพะปัะฐะฝะธั
    status: 1,
    channel: 'ะะะ',
    cart: cart,
    personal_info: {
      client_id: '',
      name: tildaData.Name || 'ัะตัั',
      street: '',
      building: '',
      city: tildaData.ะัััะพ || '',
      phone: tildaData.Phone || '0631928749',
      comment: '',
      card_or_cash: tildaData.Delivery === 'ะะตัะตะดะฟะปะฐัะฐ' ? 1 : 0, // 1 ะดะปั ะฟัะตะดะพะฟะปะฐัั, 0 ะดะปั ะฝะฐะปะพะถะบะธ
      bonus_sum: 0,
      writeoff_bonus: 0,
    },
  };

  // ะัะฒะพะดะธะผ ััะพัะผะธัะพะฒะฐะฝะฝัะน JSON ะฒ ะบะพะฝัะพะปั ะดะปั ะฟัะพะฒะตัะบะธ
  console.log('ะกัะพัะผะธัะพะฒะฐะฝะพ ะดะปั CRM:', JSON.stringify(crmData, null, 2));

  // ะัะฟัะฐะฒะปัะตะผ ะดะฐะฝะฝัะต ะฒ CRM
  try {
    const crmResponse = await fetch('https://api.dntrade.com.ua/orders_upload', {
      method: 'POST',
      headers: {
        'accept': 'application/json',
        'ApiKey': 'x2kugbdjmkcS2083thxqgrfxgbcF7smus8gbibznC40xekq9xra',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(crmData),
    });

    // ะะพะณะธััะตะผ ััะฐััั ะพัะฒะตัะฐ
    console.log('ะกัะฐััั ะพัะฒะตัะฐ ะพั CRM:', crmResponse.status, crmResponse.statusText);

    // ะััะฐะตะผัั ะฟะพะปััะธัั ัะตะปะพ ะพัะฒะตัะฐ
    let crmResponseData;
    try {
      crmResponseData = await crmResponse.json();
      console.log('ะัะฒะตั ะพั CRM (JSON):', JSON.stringify(crmResponseData, null, 2));
    } catch (jsonError) {
      console.error('ะะต ัะดะฐะปะพัั ัะฐัะฟะฐััะธัั JSON ะพั CRM:', jsonError.message);
      const crmResponseText = await crmResponse.text();
      console.log('ะัะฒะตั ะพั CRM (ัะตะบัั):', crmResponseText);
    }

    if (crmResponse.ok) {
      res.status(200).send('ok'); // ะขะธะปัะดะฐ ะถะดัั "ok"
    } else {
      console.error('ะัะธะฑะบะฐ ะพั CRM:', crmResponse.status, crmResponse.statusText);
      res.status(500).send('error');
    }
  } catch (error) {
    console.error('ะัะธะฑะบะฐ ะฟัะธ ะพัะฟัะฐะฒะบะต ะฒ CRM:', error.message);
    res.status(500).send('error');
  }
});

app.listen(PORT, () => {
  console.log(`๐ ะกะตัะฒะตั ัะปััะฐะตั ะฝะฐ http://localhost:${PORT}`);
});
